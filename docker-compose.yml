services:
  arcan-dashboard:
    image: ghcr.io/arcan-tech/arcan-dashboard-trial:${ARCAN_DASHBOARD_VERSION}
    depends_on:
      - arcan-server
    ports:
      - "3000:80"
    environment:
      REACT_APP_GRAPHQL_SERVER_URL: http://localhost:8080/graphql
      REACT_APP_PUBLIC_URL: http://localhost:3000
      REACT_APP_SKIP_AUTH: true
  
  arcan-server:
    image: ghcr.io/arcan-tech/arcan-server-trial:${ARCAN_SERVER_VERSION}
    entrypoint: ["./arcan-server.sh", "-l", "/licences/${ARCAN_LICENCE_FILENAME}"]
    depends_on:
      - arcan-postgres
    ports:
      - "8080:8080"
    environment:
      ARCAN_LICENCE_FILENAME: "${ARCAN_LICENCE_FILENAME}"
      SERVER_DATA_DIRECTORY: /tmp
      SERVER_JVM_MEMORY: 8G
      SERVER_PORT: 8080                                    
      SERVER_DEMO_MODE: false                              
      SERVER_SKIP_AUTHZ: true
      JDBC_URL: arcan-postgres:5432/arcan
      JDBC_USERNAME: arcan
      JDBC_PASSWORD: arcan
      LOGGING_LEVEL: INFO 
    volumes:
      - "./licences/${ARCAN_LICENCE_FILENAME}:/licences/${ARCAN_LICENCE_FILENAME}:ro"
      - "./projects:/arcan-server/projects"

  arcan-postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: arcan
      POSTGRES_PASSWORD: arcan
      POSTGRES_DB: arcan
    volumes:
      - arcan-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "arcan"]
      interval: 5s
      retries: 5

volumes:
  arcan-db-volume:
